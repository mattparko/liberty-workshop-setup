---
- name: Ensure we are logged in to the correct cluster as an admin
  hosts: localhost
  connection: local
  become: no
  gather_facts: no

  tasks:
    - name: Ensure we are authenticated to an OpenShift cluster as an admin
      shell: oc auth can-i '*' '*'

    - name: Ensure we are using the correct cluster
      shell: oc get route -n openshift-console console -o json | jq -r .spec.host
      register: r_cluster_url

    - fail:
        msg: >
          It appears you are not using the correct cluster. Either
          fix the inventory or log in to the correct cluster.
      when: cluster_base_url not in r_cluster_url.stdout

- name: Install operators
  hosts: localhost
  connection: local
  become: no
  gather_facts: no

  tasks:
    - name: Create catalog sources
      k8s:
        state: present
        src: "{{ item }}"
      with_fileglob: manifests/catalog-sources/*.yml

    - name: Create namespaces
      k8s:
        state: present
        src: "{{ item }}"
      with_fileglob: manifests/namespaces/*.yml

    - name: Create OCS Operator Group
      k8s:
        state: present
        src: files/manifests/storage/ocs-operator-group.yml

    - name: Install operators
      k8s:
        state: present
        src: "{{ item }}"
      with_fileglob: manifests/operators/*.yml

- name: Configure bastion host
  hosts: bastion
  become: yes
  gather_facts: no

  tasks:
    - name: Create bastion users
      user:
        name: user{{ item }}
        comment: User {{ item }}
        password: "$6$OS48D5UzmcBIN/Py$/H8ZVlLSUsk9BGP7jLa.PHmOb0DQ4k64H1G21yUJxyzqeDI4HX.2mWgRS37nNYjsahnckSHns.nELAPn8UAtq."
      loop: "{{ range(1, cluster.max_users + 1) | list }}"
    
    - name: Install tekton client tool
      unarchive:
        src: https://mirror.openshift.com/pub/openshift-v4/clients/pipeline/0.17.2/tkn-linux-amd64-0.17.2.tar.gz
        remote_src: yes
        dest: /usr/local/bin
        owner: root
        mode: 0755
        exclude:
          - LICENSE

## This is a dependency for Quay. Removing for now as I am using Nexus instead
# - name: Configure object storage
#   hosts: localhost
#   connection: local
#   become: no
#   gather_facts: no

#   tasks:
#     - name: Create NooBaa instance
#       shell: oc apply -f object-storage/noobaa.yml -n openshift-storage

#     - name: Wait for NooBaa readiness
#       shell: oc get NooBaa noobaa -n openshift-storage -o yaml |egrep "^  phase:"
#       register: result
#       retries: 30
#       delay: 15
#       until: result.stdout == "  phase: Ready"
    
#     - name: Create NooBaa PV backing store
#       shell: oc apply -f object-storage/noobaa-pv-backing-store.yml -n openshift-storage

#     # TODO: Move this to a more appropriate place so I don't halt progress unnecessarily
#     - name: Wait for NooBaa PV backing store readiness
#       shell: oc get BackingStore noobaa-pv-backing-store -n openshift-storage -o yaml |egrep "^  phase:"
#       register: result
#       retries: 30
#       delay: 15
#       until: result.stdout == "  phase: Ready"

- name: Setup OpenShift Container Storage
  hosts: localhost
  connection: local
  become: no
  gather_facts: no

  tasks:
    - name: Wait for OCS operator to finish installing
      k8s_info:
        api_version: operators.coreos.com/v1alpha1
        kind: subscription
        namespace: openshift-storage
        name: ocs-operator
      register: result
      until:
        - result.resources[0].status.state is defined
        - result.resources[0].status.state == "AtLatestKnown"
      retries: 50
      delay: 15

    - name: Retrieve list of worker nodes
      shell: oc get nodes -l node-role.kubernetes.io/worker="" -o name
      register: r_worker_nodes

    - name: Label all worker nodes as OCS nodes
      shell: oc label {{ item }} cluster.ocs.openshift.io/openshift-storage="" --overwrite
      loop: "{{ r_worker_nodes.stdout_lines }}"

    - name: Create OCS Storage Cluster
      k8s:
        state: present
        src: files/manifests/storage/ocs-storagecluster.yml

- name: Create management tool instances
  hosts: localhost
  connection: local
  become: no
  gather_facts: no

  tasks:
    - name: Wait for Operators to finish installing
      k8s_info:
        api_version: operators.coreos.com/v1alpha1
        kind: subscription
        namespace: openshift-operators
        name: "{{ item }}"
      register: result
      until:
        - result.resources[0].status.state is defined
        - result.resources[0].status.state == "AtLatestKnown"
      retries: 50
      delay: 15
      loop:
        - gitea-operator
        - nexus-operator-m88i

    - name: Create management tool instances
      k8s:
        state: present
        src: "{{ item }}"
      with_fileglob: manifests/operator-instances/*.yml
    
    # TODO: This should be an oc patch that increases max container memory to 8Gi
    # - name: Remove Quay limit range
    #   shell: oc delete limitranges quay-core-resource-limits -n quay

- name: Install Etherpad
  hosts: localhost
  connection: local
  become: no
  gather_facts: no

  tasks:
    - name: Deploy etherpad database
      k8s:
        state: present
        namespace: etherpad
        src: files/manifests/etherpad/postgres-db.yml

    - name: Deploy etherpad
      k8s:
        state: present
        namespace: etherpad
        src: files/manifests/etherpad/etherpad.yml

- name: Configure operators
  hosts: localhost
  connection: local
  become: no
  gather_facts: no

  tasks:
    - name: Setup Gitea
      include_tasks: tasks/gitea.yml

    - name: Setup Nexus repository manager
      include_tasks: tasks/nexus.yml

    # - name: Setup Quay
    #   include_tasks: tasks/quay.yml

- name: Output useful information
  hosts: localhost
  connection: local
  become: no
  gather_facts: no

  tasks:
    - name: Get Etherpad URL
      k8s_info:
        api_version: route.openshift.io/v1
        kind: route
        namespace: etherpad
        name: etherpad
      register: r_etherpad_url

    - name: Get Gitea URL
      k8s_info:
        api_version: route.openshift.io/v1
        kind: route
        namespace: gitea
        name: gitea
      register: r_gitea_url

    - name: Get Nexus URL
      k8s_info:
        api_version: route.openshift.io/v1
        kind: route
        namespace: nexus
        name: nexus
      register: r_nexus_url

    - name: Get Registry URL
      k8s_info:
        api_version: route.openshift.io/v1
        kind: route
        namespace: nexus
        name: registry
      register: r_registry_url

    - debug:
        msg: |
          The cluster has now been set up, but please note some services may
          still be on their way up. Do be patient, but also do check logs.
          
          While you wait, here is some useful information to update the
          workshop's shared Etherpad. You will find the etherpad at:
          
          https://{{ r_etherpad_url.resources[0].spec.host }}/p/main
          
          ##############
          Workshop Links
            - Exercises: https://mattparko.github.io/liberty-workshop
            - Source Code: https://github.com/mattparko/liberty-workshop
          
          Cluster Details
            - OpenShift Web console: https://console-openshift-console.apps.{{ cluster_base_url }}
            - OpenShift API: https://api.{{ cluster_base_url }}:6443
            - Gitea URL: https://{{ r_gitea_url.resources[0].spec.host }}
            - Bastion Host: {{ groups.bastion[0] }}
            - Nexus URL: https://{{ r_nexus_url.resources[0].spec.host }}
            - Registry URL: {{ r_registry_url.resources[0].spec.host }}
          ##############
